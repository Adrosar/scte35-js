{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","MyErrorStateMatcher","control","form","isSubmitted","submitted","invalid","dirty","touched","AppComponent","scte35","title","scte35format","formats","scte35FormControl","required","matcher","raw","parsedObject","parseFromB64","value","parseFromHex","displayObject","rawObject","JSON","stringify","parse","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { SCTE35 } from 'scte35';\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.styl']\r\n})\r\n\r\nexport class AppComponent {\r\n  scte35: SCTE35 = new SCTE35();\r\n  title = 'SCTE35-JS PARSER DEMO (v0.2.16)';\r\n  scte35format = 'Base64';\r\n  formats: string[] = ['Base64', 'Hexadecimal'];\r\n  scte35FormControl = new FormControl('', [\r\n    Validators.required\r\n  ]);\r\n  matcher = new MyErrorStateMatcher();\r\n  parsedObject: any;\r\n  rawObject: string;\r\n  displayObject: any;\r\n  raw = false;\r\n\r\n  parse() {\r\n    switch (this.scte35format) {\r\n      case 'Base64':\r\n        this.parsedObject = this.scte35.parseFromB64(this.scte35FormControl.value);\r\n        break;\r\n      case 'Hexadecimal':\r\n        this.parsedObject = this.scte35.parseFromHex(this.scte35FormControl.value);\r\n        break;\r\n    }\r\n    this.displayObject = this.parsedObject;\r\n    this.rawObject = JSON.stringify(this.parsedObject);\r\n  }\r\n\r\n  viewRaw() {\r\n    this.displayObject = this.rawObject;\r\n    this.raw = true;\r\n\r\n  }\r\n\r\n  viewPretty() {\r\n    this.displayObject = this.parsedObject;\r\n    this.raw = false;\r\n  }\r\n}\r\n","<!-- Toolbar -->\r\n<div class=\"toolbar\" role=\"banner\">\r\n  <img width=\"40\" alt=\"Logo\" src=\"http://cdn.comcast.com/learn/-/media/common/favicon/favicon.ico\" />\r\n\r\n  <span>{{title}}</span>\r\n\r\n</div>\r\n\r\n<div class=\"content\" role=\"main\">\r\n\r\n  <div class=\"scte35-settings\">\r\n    <label id=\"radio-group-label\">\r\n      <h3>SCTE-35 Format Type</h3>\r\n    </label>\r\n    <mat-radio-group aria-labelledby=\"radio-group-label\" class=\"radio-group\" [(ngModel)]=\"scte35format\">\r\n      <mat-radio-button class=\"radio-button\" *ngFor=\"let format of formats\" [value]=\"format\">\r\n        {{format}}\r\n      </mat-radio-button>\r\n    </mat-radio-group>\r\n\r\n\r\n    <form class=\"form\">\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>SCTE35 TAG</mat-label>\r\n        <input matInput [formControl]=\"scte35FormControl\" [errorStateMatcher]=\"matcher\"\r\n          placeholder=\"Ex. /DBGAAET8J+pAP/wBQb+AAAAAAAwAi5DVUVJQAErgX+/CR9TSUdOQUw6OGlTdzllUWlGVndBQUFBQUFBQUJCQT09NwMDaJ6RZQ==\">\r\n        <mat-error *ngIf=\"scte35FormControl.hasError('required')\">\r\n          A valid SCTE35 is <strong>required</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </form>\r\n\r\n    <button mat-raised-button color=\"accent\" (click)=\"parse()\">PARSE</button>\r\n\r\n    <mat-card *ngIf=\"displayObject !== undefined\" class=\"scte35-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar class=\"example-header-image\"></div>\r\n        <mat-card-title>Parsed SCTE-35</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <ngx-json-viewer *ngIf=\"!raw\" [json]=\"displayObject\"></ngx-json-viewer>\r\n        <div class=\"raw-viewer\" *ngIf=\"raw\">{{rawObject}}</div>\r\n\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button *ngIf=\"!raw\" mat-raised-button color=\"primary\" (click)=\"viewRaw()\">VIEW RAW</button>\r\n\r\n        <button *ngIf=\"raw\" mat-raised-button color=\"primary\" (click)=\"viewPretty()\">VIEW PRETTY</button>\r\n\r\n      </mat-card-actions>\r\n\r\n    </mat-card>\r\n\r\n\r\n\r\n\r\n    <!-- Footer -->\r\n    <svg id=\"clouds\" alt=\"Gray Clouds Background\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2611.084\" height=\"485.677\"\r\n      viewBox=\"0 0 2611.084 485.677\">\r\n      <path id=\"Path_39\" data-name=\"Path 39\"\r\n        d=\"M2379.709,863.793c10-93-77-171-168-149-52-114-225-105-264,15-75,3-140,59-152,133-30,2.83-66.725,9.829-93.5,26.25-26.771-16.421-63.5-23.42-93.5-26.25-12-74-77-130-152-133-39-120-212-129-264-15-54.084-13.075-106.753,9.173-138.488,48.9-31.734-39.726-84.4-61.974-138.487-48.9-52-114-225-105-264,15a162.027,162.027,0,0,0-103.147,43.044c-30.633-45.365-87.1-72.091-145.206-58.044-52-114-225-105-264,15-75,3-140,59-152,133-53,5-127,23-130,83-2,42,35,72,70,86,49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33,61.112,8.015,113.854-5.72,150.492-29.764a165.62,165.62,0,0,0,110.861-3.236c47,94,178,113,251,33,31.385,4.116,60.563,2.495,86.487-3.311,25.924,5.806,55.1,7.427,86.488,3.311,73,80,204,61,251-33a165.625,165.625,0,0,0,120,0c51,13,108,15,157-5a147.188,147.188,0,0,0,33.5-18.694,147.217,147.217,0,0,0,33.5,18.694c49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33C2446.709,1093.793,2554.709,922.793,2379.709,863.793Z\"\r\n        transform=\"translate(142.69 -634.312)\" fill=\"#eee\" />\r\n    </svg>\r\n\r\n  </div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatRadioModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    NgxJsonViewerModule,\r\n    MatCardModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}